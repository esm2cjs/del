{
  "version": 3,
  "sources": ["../esm/index.js"],
  "sourcesContent": ["import {promisify} from 'node:util';\nimport path from 'node:path';\nimport process from 'node:process';\nimport {globby, globbySync} from '@esm2cjs/globby';\nimport isGlob from 'is-glob';\nimport slash from '@esm2cjs/slash';\nimport gracefulFs from 'graceful-fs';\nimport isPathCwd from '@esm2cjs/is-path-cwd';\nimport isPathInside from '@esm2cjs/is-path-inside';\nimport rimraf from 'rimraf';\nimport pMap from '@esm2cjs/p-map';\n\nconst rimrafP = promisify(rimraf);\n\nconst rimrafOptions = {\n\tglob: false,\n\tunlink: gracefulFs.unlink,\n\tunlinkSync: gracefulFs.unlinkSync,\n\tchmod: gracefulFs.chmod,\n\tchmodSync: gracefulFs.chmodSync,\n\tstat: gracefulFs.stat,\n\tstatSync: gracefulFs.statSync,\n\tlstat: gracefulFs.lstat,\n\tlstatSync: gracefulFs.lstatSync,\n\trmdir: gracefulFs.rmdir,\n\trmdirSync: gracefulFs.rmdirSync,\n\treaddir: gracefulFs.readdir,\n\treaddirSync: gracefulFs.readdirSync,\n};\n\nfunction safeCheck(file, cwd) {\n\tif (isPathCwd(file)) {\n\t\tthrow new Error('Cannot delete the current working directory. Can be overridden with the `force` option.');\n\t}\n\n\tif (!isPathInside(file, cwd)) {\n\t\tthrow new Error('Cannot delete files/directories outside the current working directory. Can be overridden with the `force` option.');\n\t}\n}\n\nfunction normalizePatterns(patterns) {\n\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\tpatterns = patterns.map(pattern => {\n\t\tif (process.platform === 'win32' && isGlob(pattern) === false) {\n\t\t\treturn slash(pattern);\n\t\t}\n\n\t\treturn pattern;\n\t});\n\n\treturn patterns;\n}\n\nexport async function deleteAsync(patterns, {force, dryRun, cwd = process.cwd(), onProgress = () => {}, ...options} = {}) {\n\toptions = {\n\t\texpandDirectories: false,\n\t\tonlyFiles: false,\n\t\tfollowSymbolicLinks: false,\n\t\tcwd,\n\t\t...options,\n\t};\n\n\tpatterns = normalizePatterns(patterns);\n\n\tconst paths = await globby(patterns, options);\n\tconst files = paths.sort((a, b) => b.localeCompare(a));\n\n\tif (files.length === 0) {\n\t\tonProgress({\n\t\t\ttotalCount: 0,\n\t\t\tdeletedCount: 0,\n\t\t\tpercent: 1,\n\t\t});\n\t}\n\n\tlet deletedCount = 0;\n\n\tconst mapper = async file => {\n\t\tfile = path.resolve(cwd, file);\n\n\t\tif (!force) {\n\t\t\tsafeCheck(file, cwd);\n\t\t}\n\n\t\tif (!dryRun) {\n\t\t\tawait rimrafP(file, rimrafOptions);\n\t\t}\n\n\t\tdeletedCount += 1;\n\n\t\tonProgress({\n\t\t\ttotalCount: files.length,\n\t\t\tdeletedCount,\n\t\t\tpercent: deletedCount / files.length,\n\t\t});\n\n\t\treturn file;\n\t};\n\n\tconst removedFiles = await pMap(files, mapper, options);\n\n\tremovedFiles.sort((a, b) => a.localeCompare(b));\n\n\treturn removedFiles;\n}\n\nexport function deleteSync(patterns, {force, dryRun, cwd = process.cwd(), ...options} = {}) {\n\toptions = {\n\t\texpandDirectories: false,\n\t\tonlyFiles: false,\n\t\tfollowSymbolicLinks: false,\n\t\tcwd,\n\t\t...options,\n\t};\n\n\tpatterns = normalizePatterns(patterns);\n\n\tconst files = globbySync(patterns, options)\n\t\t.sort((a, b) => b.localeCompare(a));\n\n\tconst removedFiles = files.map(file => {\n\t\tfile = path.resolve(cwd, file);\n\n\t\tif (!force) {\n\t\t\tsafeCheck(file, cwd);\n\t\t}\n\n\t\tif (!dryRun) {\n\t\t\trimraf.sync(file, rimrafOptions);\n\t\t}\n\n\t\treturn file;\n\t});\n\n\tremovedFiles.sort((a, b) => a.localeCompare(b));\n\n\treturn removedFiles;\n}\n"],
  "mappings": "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",
  "names": ["rimraf", "gracefulFs", "isPathCwd", "isPathInside", "process", "isGlob", "slash", "path", "pMap"]
}
